---
items:
  Cargo plugins:
    -
      name: cargo-audit
      github: rustsec/cargo-audit
      description: Audit Cargo.lock for crates with security vulnerabilities reported to the RustSec Advisory Database.
    -
      name: cargo-binutils
      github: japaric/cargo-binutils
      description: Cargo subcommands to invoke the LLVM tools shipped with the Rust toolchain
    -
      name: cargo-bom
      github: sensorfu/cargo-bom
      description: This tool can be used to construct Bill of Materials for software using Cargo package manager.

        The output of cargo bom has two sections. First it prints out a table with all dependencies, version numbers and names of licenses. Then it prints all license texts found from depended projects (files matching glob "LICENSE*").
    -
      name: cargo-cache
      github: matthiaskrgr/cargo-cache
      description: Display information on the cargo cache `~/.cargo/`. Optional cache pruning.
    -
      name: cargo-check
      github: rsolomo/cargo-check
      description: This is a wrapper around `cargo rustc -- -Zno-trans`. It can be helpful for running a faster compile if you only need correctness checks.
    -
      name: cargo-deb
      github: mmstick/cargo-deb
      doc: true
      description: This is a Cargo helper command which automatically creates binary Debian packages (`.deb`) from Cargo projects.
    -
      name: cargo-expand
      github: dtolnay/cargo-expand
      channel: nightly
      description: Once installed, the following command prints out the result of macro expansion and `#[derive]` expansion applied to the current crate.
    -
      name: cargo-fuzz
      github: rust-fuzz/cargo-fuzz
      description: Simple wrapper around libFuzzer
    -
      name: cargo-geiger
      github: anderejd/cargo-geiger
      description: A program that list statistics related to usage of `unsafe` Rust code in a Rust crate and all its dependencies.
    -
      name: cargo-generate
      github: ashleygwilliams/cargo-generate
      description: The `cargo-generate` is a developer tool to help you get up and running quickly with a new Rust project by leveraging a pre-existing git repository as a template.
    -
      name: cargo-graph
      github: kbknapp/cargo-graph
      description: A cargo subcommand for building GraphViz DOT files of dependency graphs.
    -
      name: cargo-make
      github: sagiegurari/cargo-make
      url: https://sagiegurari.github.io/cargo-make
      description: The cargo-make task runner enables to define and configure sets of tasks and run them as a flow.
    -
      name: cargo-testify
      doc: true
      github: greyblake/cargo-testify
      description: Automatically runs tests on your Rust project and notifies about the result.
    -
      name: cargo-update
      github: nabijaczleweli/cargo-update
      description: A `cargo` subcommand for checking and applying updates to installed executables
    -
      name: cargo-watch
      doc: true
      github: passcod/cargo-watch
      description: Cargo Watch watches over your project's source for changes, and runs Cargo commands when they occur.

  Commandline tools:
    -
      name: bat
      description: A `cat(1)` clone with syntax highlighting and Git integration.
      github: sharkdp/bat
    -
      name: bindgen
      github: rust-lang/rust-bindgen
      doc: true
      description: bindgen automatically generates Rust FFI bindings to C (and some C++) libraries.
    -
      name: capnpc
      doc: true
      github: capnproto/capnproto-rust
      description: A `Cap'n Proto` code generation for Rust
    -
      name: diesel_cli
      url: https://diesel.rs
      github: diesel-rs/diesel
      description: Diesel CLI is a tool that aids in managing your database schema. Migrations are bi-directional changes to your database that get applied sequentially.

    -
      name: exa
      url: https://the.exa.website/
      github: ogham/exa
      description: exa is a replacement for `ls` written in Rust.
    -
      name: fd-find
      github: sharkdp/fd
      description: fd is a simple, fast and user-friendly alternative to `find`.
    -
      name: fselect
      url: https://github.com/jhspetersson/fselect/blob/master/docs/usage.md
      github: jhspetersson/fselect
      description: Find files with SQL-like queries
    -
      name: hyperfine
      github: sharkdp/hyperfine
      description: A command-line benchmarking tool (inspired by [bench](https://github.com/Gabriel439/bench)).
    -
      name: just
      github: casey/just
      doc: true
      description: just is a handy way to save and run project-specific commands (similar to `make`).
    -
      name: mdbook
      url: https://rust-lang-nursery.github.io/mdBook/index.html
      github: rust-lang-nursery/mdBook
      description: mdBook is a utility to create modern online books from Markdown files.
    -
      name: parallel
      github: mmstick/parallel
      description: This is an attempt at recreating the functionality of [GNU Parallel](https://www.gnu.org/software/parallel/), a work-stealer for the command-line, in Rust under a MIT license.
    -
      name: project_init
      channel: nightly
      github: vmchale/project-init
      description: pi is a command-line utility to initialize projects. It is written in rust.
    -
      name: ripgrep
      github: BurntSushi/ripgrep
      description: ripgrep is a line-oriented search tool that recursively searches your current directory for a regex pattern while respecting your gitignore rules.
    -
      name: rustsym
      github: trixnz/rustsym
      description: A tool to query symbols from rust code for use in IDEs
    -
      name: sccache
      doc: true
      github: mozilla/sccache
      description: Sccache is a `ccache`-like tool. It is used as a compiler wrapper and avoids compilation when possible, storing a cache in a remote storage using the Amazon Simple Cloud Storage Service (S3) API, the Google Cloud Storage (GCS) API, or Redis.
    -
      name: skim
      github: lotabout/skim
      description: Half of our life is spent on navigation; files, lines, commandsâ€¦ You need skim! It is a general fuzzy finder that saves you time.
    -
      name: svd2rust
      github: japaric/svd2rust
      description: Generate Rust register maps (`struct`s) from SVD files. Essential for any ARM Cortex-M programmers ou there.
    -
      name: tin-summer
      github: vmchale/tin-summer
      description: If you do a significant amount of programming, you'll probably end up with build artifacts scattered about. sn is a tool to help you find those artifacts.

        `sn` is also a replacement for du. It has nicer output, saner commands and defaults, and it even runs faster on big directories thanks to multithreading.
    -
      name: tokei
      url: https://tokei.rs/
      doc: true
      github: Aaronepower/tokei
      description: Tokei is a program that displays statistics about your code. Tokei will show number of files, total lines within those files and code, comments, and blanks grouped by language.
    -
      name: wasm-gc
      github: alexcrichton/wasm-gc
      description: A small command to gc a wasm module and remove all unneeded exports, imports, functions, etc. This is effectively `--gc-sections` for `wasm`.
    -
      name: wasm-pack
      url: https://rustwasm.github.io/wasm-pack/
      github: ashleygwilliams/wasm-pack
      description: This tool seeks to be a one-stop shop for building and working with rust- generated WebAssembly that you would like to interop with JavaScript, in the browser or with Node.js. wasm-pack helps you build rust-generated WebAssembly packages that you could publish to the npm registry, or otherwise use alongside any javascript packages in workflows that you already use, such as webpack or greenkeeper.

    -
      name: xargo
      github: japaric/xargo
      description: Cross-cargo, the sysroot manager that lets you build and customize `std`

  Commandline libraries:
    -
      name: clap
      github: clap-rs/clap
      url: https://clap.rs
      description: A full featured, fast Command Line Argument Parser for Rust

  Data persitance:
    -
      name: serde
      doc: true
      github: serde-rs/serde
      url: https://serde.rs/
      description: Serde is a framework for serializing and deserializing Rust data structures efficiently and generically.

    -
      name: serde_yaml
      doc: true
      github: dtolnay/serde-yaml
      description: Strongly typed YAML library for Rust
