---
items:
  Cargo plugins:
    -
      name: cargo-audit
      gihub: rustsec/cargo-audit
      description: Audit Cargo.lock for crates with security vulnerabilities reported to the RustSec Advisory Database.
    -
      name: cargo-binutils
      github: japaric/cargo-binutils
      description: Cargo subcommands to invoke the LLVM tools shipped with the Rust toolchain
    -
      name: cargo-bom
      github: sensorfu/cargo-bom
      description: This tool can be used to construct Bill of Materials for software using Cargo package manager.

        The output of cargo bom has two sections. First it prints out a table with all dependencies, version numbers and names of licenses. Then it prints all license texts found from depended projects (files matching glob "LICENSE*").
    -
      name: cargo-cache
      github: matthiaskrgr/cargo-cache
      description: Display information on the cargo cache `~/.cargo/`. Optional cache pruning.
    -
      name: cargo-check
      github: rsolomo/cargo-check
      description: This is a wrapper around `cargo rustc -- -Zno-trans`. It can be helpful for running a faster compile if you only need correctness checks.
    -
      name: cargo-deb
      github: mmstick/cargo-deb
      doc: true
      description: This is a Cargo helper command which automatically creates binary Debian packages (`.deb`) from Cargo projects.
    -
      name: cargo-expand
      github: dtolnay/cargo-expand
      unstable: true
      description: Once installed, the following command prints out the result of macro expansion and `#[derive]` expansion applied to the current crate.
    -
      name: cargo-fuzz
      github: rust-fuzz/cargo-fuzz
      description: Simple wrapper around libFuzzer
    -
      name: cargo-geiger
      github: anderejd/cargo-geiger
      description: A program that list statistics related to usage of `unsafe` Rust code in a Rust crate and all its dependencies.
    -
      name: cargo-generate
      github: ashleygwilliams/cargo-generate
      description: The `cargo-generate` is a developer tool to help you get up and running quickly with a new Rust project by leveraging a pre-existing git repository as a template.
    -
      name: cargo-graph
      github: kbknapp/cargo-graph
      description: A cargo subcommand for building GraphViz DOT files of dependency graphs.
    -
      name: cargo-make
      github: sagiegurari/cargo-make
      url: https://sagiegurari.github.io/cargo-make
      description: The cargo-make task runner enables to define and configure sets of tasks and run them as a flow.
    -
      name: cargo-testify
      doc: true
      github: greyblake/cargo-testify
      description: Automatically runs tests on your Rust project and notifies about the result.
    -
      name: cargo-update
      github: nabijaczleweli/cargo-update
      description: A `cargo` subcommand for checking and applying updates to installed executables
    -
      name: cargo-watch
      doc: true
      github: passcod/cargo-watch
      description: Cargo Watch watches over your project's source for changes, and runs Cargo commands when they occur.

  Commandline tools:
    -
      name: bat
      description: A `cat(1)` clone with syntax highlighting and Git integration.
      github: sharkdp/bat
    -
      name: bindgen
      description: desc
    -
      name: capnpc
      description: desc
    -
      name: diesel_cli
      description: desc
    -
      name: doxidize
      description: desc
    -
      name: exa
      description: desc
    -
      name: fd-find
      description: desc
    -
      name: fselect
      description: desc
    -
      name: hyperfine
      description: desc
    -
      name: just
      description: desc
    -
      name: mdbook
      description: desc
    -
      name: parallel
      description: desc
    -
      name: project_init
      description: desc
    -
      name: ripgrep
      description: desc
    -
      name: rustsym
      description: desc
    -
      name: sccache
      description: desc
    -
      name: skim
      description: desc
    -
      name: skim
      description: desc
    -
      name: svd2rust
      description: desc
    -
      name: tin-summer
      description: desc
    -
      name: tokei
      description: desc
    -
      name: wasm-gc
      description: desc
    -
      name: wasm-pack
      description: desc
    -
      name: xargo
      description: desc

  Commandline libraries:
    -
      name: clap
      github: clap-rs/clap
      url: https://clap.rs
      description: A full featured, fast Command Line Argument Parser for Rust

  Data persitance:
    -
      name: serde
      github: serde-rs/serde
      url: https://serde.rs/
      description: Serde is a framework for serializing and deserializing Rust data structures efficiently and generically.

    -
      name: serde_yaml
      github: dtolnay/serde-yaml
      description: Strongly typed YAML library for Rust
